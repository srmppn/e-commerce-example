{"version":3,"sources":["components/product-rate/Rating.js","components/product-item/ProductItem.js","App.js","serviceWorker.js","index.js"],"names":["Rating","ratingStar","score","Array","keys","map","i","console","log","style","color","class","this","props","rate","Component","ProductItem","className","src","width","height","product","detail","price","province","App","productList","products","state","Navbar","bg","variant","Brand","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2UAkBeA,E,4MAfbC,WAAa,SAACC,GACZ,OAAO,YAAIC,MAAM,GAAGC,QAAQC,KAAI,SAAAC,GAE9B,OADAC,QAAQC,IAAIF,GACL,uBAAGG,MAAO,CAACC,MAAOJ,EAAEJ,EAAO,OAAS,aAAcS,MAAM,oB,uDAIjE,OACE,8BACGC,KAAKX,WAAWW,KAAKC,MAAMC,W,GAVfC,aCuBNC,E,uKAlBX,OACE,yBAAKC,UAAU,qBACX,yBAAKC,IAAI,gEAAgEC,MAAM,MAAMC,OAAO,QAC5F,yBAAKH,UAAU,kBACb,8BACGL,KAAKC,MAAMQ,QAAQC,QAEtB,yBAAKL,UAAU,kBACb,kBAAC,EAAD,CAAQH,KAAMF,KAAKC,MAAMQ,QAAQP,OACjC,0BAAMG,UAAU,iBAAiBL,KAAKC,MAAMQ,QAAQE,MAApD,OAEF,8BAAOX,KAAKC,MAAMQ,QAAQG,gB,GAbZT,aCkDXU,G,8DAhDb,aAAe,IAAD,8BACZ,gBA8BFC,YAAc,SAACC,GACb,OAAOA,EAAStB,KAAI,SAACgB,GAAD,OAAa,kBAAC,EAAD,CAAaA,QAASA,QA9BvD,EAAKO,MAAQ,CACXD,SAAU,CACR,CACEL,OAAQ,2MACRR,KAAM,EACNS,MAAO,IACPC,SAAU,kFAEZ,CACEF,OAAQ,2MACRR,KAAM,EACNS,MAAO,IACPC,SAAU,kFAEZ,CACEF,OAAQ,2MACRR,KAAM,EACNS,MAAO,IACPC,SAAU,kFAEZ,CACEF,OAAQ,2MACRR,KAAM,EACNS,MAAO,IACPC,SAAU,oFA1BJ,E,qDAmCZ,OACE,yBAAKP,UAAU,OACb,kBAACY,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,QACxB,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,eAEF,yBAAKhB,UAAU,0BACZL,KAAKc,YAAYd,KAAKgB,MAAMD,gB,GA1CrBZ,cCMEmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5C,QAAQ4C,MAAMA,EAAMC,c","file":"static/js/main.9530ce1f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Rating extends Component {\r\n  ratingStar = (score) => {\r\n    return [...Array(5).keys()].map(i => {\r\n      console.log(i)\r\n      return <i style={{color: i<score? 'gold' : 'lightgray'}} class=\"fas fa-star\"></i>\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <span>\r\n        {this.ratingStar(this.props.rate)}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rating;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./ProductItem.css\";\r\nimport Rating from \"../product-rate/Rating\";\r\n\r\nclass ProductItem extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"product-container\">\r\n          <img src=\"https://cf.shopee.co.th/file/9ab89f657f9b27362f8ca82bd79a0f7f\" width=\"180\" height=\"200\"/>\r\n          <div className=\"product-detail\">\r\n            <span>\r\n              {this.props.product.detail}\r\n            </span>\r\n            <div className=\"product-schema\">\r\n              <Rating rate={this.props.product.rate}/>\r\n              <span className=\"product-price\">{this.props.product.price} B</span>\r\n            </div>\r\n            <span>{this.props.product.province}</span>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductItem;\r\n","import React, { Component } from \"react\";\nimport { Navbar } from \"react-bootstrap\";\nimport ProductItem from \"./components/product-item/ProductItem\";\nimport \"./App.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      products: [\n        {\n          detail: \"Wacoal Panty Set (3 ชิ้น) รูปแบบ Short รุ่น WU4M01 สีดำ-เบจ-ชมพู (BL-BE-CP)\",\n          rate: 4,\n          price: 199,\n          province: \"กรุงเทพมหานคร\"\n        },\n        {\n          detail: \"Wacoal Panty Set (3 ชิ้น) รูปแบบ Short รุ่น WU4M01 สีดำ-เบจ-ชมพู (BL-BE-CP)\",\n          rate: 3,\n          price: 130,\n          province: \"กรุงเทพมหานคร\"\n        },\n        {\n          detail: \"Wacoal Panty Set (3 ชิ้น) รูปแบบ Short รุ่น WU4M01 สีดำ-เบจ-ชมพู (BL-BE-CP)\",\n          rate: 3,\n          price: 130,\n          province: \"กรุงเทพมหานคร\"\n        },\n        {\n          detail: \"Wacoal Panty Set (3 ชิ้น) รูปแบบ Short รุ่น WU4M01 สีดำ-เบจ-ชมพู (BL-BE-CP)\",\n          rate: 3,\n          price: 130,\n          province: \"กรุงเทพมหานคร\"\n        }\n      ],\n    };\n  }\n  productList = (products) => {\n    return products.map((product) => <ProductItem product={product} />);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">E-commerce</Navbar.Brand>\n        </Navbar>\n        <div className=\"product-list-container\">\n          {this.productList(this.state.products)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}